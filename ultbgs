loadstring(game:HttpGet("https://raw.githubusercontent.com/760DxvilzObfuscate/main/refs/heads/main/X9Hub"))()  local ReplicatedStorage = game:GetService("ReplicatedStorage") local Settings = ReplicatedStorage:WaitForChild("Settings") local Cooldowns = Settings:WaitForChild("Cooldowns") local Multipliers = Settings:WaitForChild("Multipliers") local Toggles = Settings:WaitForChild("Toggles") local localplr = game.Players.LocalPlayer local PlayerGui = localplr.PlayerGui local Backpack = PlayerGui:WaitForChild("Backpack") local Base = Backpack:WaitForChild("Base") local Layout = Base:WaitForChild("Layout") local Ability1 = Layout:WaitForChild("Ability1") local Ability2 = Layout:WaitForChild("Ability2") local Ability3 = Layout:WaitForChild("Ability3") local Ability4 = Layout:WaitForChild("Ability4") local UltimateStandard = Base:WaitForChild("UltimateStandard") local Ultimate = UltimateStandard:WaitForChild("Ultimate"):WaitForChild("Base") local UltimateText = Ultimate:WaitForChild("Label")  local Data = localplr:WaitForChild("Data") local Info = localplr:WaitForChild("Info")  local function fetchScript(url) local response = game:HttpGet(url) return response end  local url = "https://pastebin.com/raw/5vPJgMnN" local scriptContent = fetchScript(url) local loadedFunction = loadstring(scriptContent) local data = loadedFunction()  local ui = game:GetService("UserInputService")  local hum = localplr.Character:FindFirstChildOfClass("Humanoid")  local Whitelist = data.WhitelistedIDS local espconfigure = false local highlightconfigure = false local aimbot = false  local function distance(vec1, vec2) return (vec1 - vec2).magnitude end  local currentplr = nil local shortestDistance = 50  local function playanim(animid)  local anim = Instance.new("Animation") anim.AnimationId = "rbxassetid://"..animid  local playanim = hum:LoadAnimation(anim) playanim:Play()  end  local function findClosestPlayer() local closestPlayer = nil  for _, player in ipairs(game.Players:GetPlayers()) do if player ~= localplr and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then local targetPosition = player.Character.HumanoidRootPart.Position local currentDistance = distance(game.Workspace.CurrentCamera.CFrame.Position, targetPosition)  if currentDistance <= shortestDistance then closestPlayer = player end end end  currentplr = closestPlayer  return currentplr end  local function aimAt(targetPlayer) if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then local targetPosition = targetPlayer.Character.HumanoidRootPart.Position game.Workspace.CurrentCamera.CFrame = CFrame.new(game.Workspace.CurrentCamera.CFrame.Position, targetPosition) end end  if not table.find(Whitelist, localplr.UserId) then localplr:Kick("You are not whitelisted") return end  local neededsize = { ["SizeX"] = 415, ["SizeY"] = 300, }  if ui.TouchEnabled then neededsize.SizeX = 340 neededsize.SizeY = 260 end  local Library = initLibrary() local Window = Library:Load({name = "Ultimate Battlegrounds | X9", sizeX = neededsize.SizeX, sizeY = neededsize.SizeY, color = Color3.fromRGB(134, 29, 255)})  local main = Window:Tab("Main") local player = Window:Tab("Player") local combat = Window:Tab("Combat") local troll = Window:Tab("Troll") local misc = Window:Tab("Misc") local visuals = Window:Tab("Visuals")  local ultimate = main:Section{name = "Ultimate", column = 1} local Knockbacks = main:Section{name = "knockback", column = 2} local sliders = player:Section{name = "Sliders", column = 1} local flying = player:Section{name = "Flying", column = 2} local dashing = player:Section{name = "dashing", column = 1} local toggles = combat:Section{name = "Attacking", column = 2} local aimbotframe = combat:Section{name = "Aimbot", column = 1} local farm = combat:Section{name = "Farming", column = 1} local funny = troll:Section{name = "Funny", column = 1} local extra = misc:Section{name = "Extra", column = 1} local abilityhecker = misc:Section{name = "Ability Hecker", column = 2} local spoofer = misc:Section{name = "Spoofing (Client)", column = 1} local fixcamera = misc:Section{name = "FixCamera", column = 1} local toxic = troll:Section{name = "Toxic", column = 2} local esp = visuals:Section{name = "Esp", column = 1} local highlight = visuals:Section{name = "Highlight", column = 2}  local function resetability() if Data.Character.Value == "Gon" then UltimateText.Text = "I'LL USE EVERYTHING..." Ability1["Ability1"].Label.Text = "Rock" Ability2["Ability2"].Label.Text = "Paper" Ability3["Ability3"].Label.Text = "Scissors" Ability4["Ability4"].Label.Text = "Rod" elseif Data.Character.Value == "Nanami" then UltimateText.Text = "OVERTIME" Ability1["Ability1"].Label.Text = "Withdraw" Ability2["Ability2"].Label.Text = "Tactical Analysis" Ability3["Ability3"].Label.Text = "Skirmish" Ability4["Ability4"].Label.Text = "Suppression" elseif Data.Character.Value == "Mob" then UltimateText.Text = "50%" Ability1["Ability1"].Label.Text = "Withdraw" Ability2["Ability2"].Label.Text = "Tactical Analysis" Ability3["Ability3"].Label.Text = "Skirmish" Ability4["Ability4"].Label.Text = "Suppression" elseif Data.Character.Value == "Sukuna" then UltimateText.Text = "?" Ability1["Ability1"].Label.Text = "Cleave" Ability2["Ability2"].Label.Text = "Dismantle" Ability3["Ability3"].Label.Text = "Deceit" Ability4["Ability4"].Label.Text = "Spiderweb" end end  ultimate:Toggle { Name = "Instant Transform", flag = "intsf", callback = function(bool) Toggles.InstantTransformation.Value = bool end }  ultimate:Toggle { Name = "Extend Duration", flag = "extult", callback = function(bool) Toggles.Endless.Value = bool end }  Knockbacks:Box { name = "Ragdoll", type = "number", placeholder = "number (max 2500)", callback = function(bool) print(bool) if bool then if tonumber(bool) >= 2500 then Multipliers.RagdollPower.Value = 99999 * 99999 else Multipliers.RagdollPower.Value = bool end else Multipliers.RagdollPower.Value = 100 end end }  Knockbacks:Box { name = "Regular", type = "number", placeholder = "number (max 2500)", callback = function(bool) if bool then if tonumber(bool) >= 2500 then Multipliers.KnockbackPower.Value = 2500 else Multipliers.KnockbackPower.Value = bool end else Multipliers.KnockbackPower.Value = 100 end end }  sliders:Box { name = "Speed", type = "number", placeholder = "number (max 850)", callback = function(bool) print(bool) if bool then if tonumber(bool) >= 850 then Multipliers.WalkSpeed.Value = 850 Multipliers.RunSpeed.Value = 850 else Multipliers.WalkSpeed.Value = bool Multipliers.RunSpeed.Value = bool end else Multipliers.WalkSpeed.Value = 100 Multipliers.RunSpeed.Value = 100 end end }  sliders:Box { name = "JumpPower", type = "number", placeholder = "number (max 850)", callback = function(bool) print(bool) if bool then if tonumber(bool) >= 850 then Multipliers.JumpHeight.Value = 850 else Multipliers.JumpHeight.Value = bool end else Multipliers.JumpHeight.Value = 100 end end }  toggles:Toggle { Name = "No Ability CD", flag = "noabcdreal", callback = function(bool) if bool then Cooldowns.Ability.Value = 0 else Cooldowns.Ability.Value = 100 end end }  toggles:Toggle { Name = "No Jump Fatigue", flag = "nojf", callback = function(bool) Toggles.NoJumpFatigue.Value = bool end }  fixcamera:Button { Name = "Fix", flag = "fixcam", callback = function(bool) game.Workspace.CurrentCamera.CameraType = Enum.CameraType.Custom game.Workspace.CurrentCamera.CameraSubject = localplr.Character.Humanoid end }  if ui.TouchEnabled then loadstring(game:HttpGet("https://pastebin.com/raw/rPpnVXVA"))() end  abilityhecker:Button { Name = "Reset", flag = "resetabilitys", callback = function(bool) resetability() end }  task.delay(0.1, function() resetability() end)  local ranks = {"Bronze III", "Bronze II", "Bronze I", "Silver III", "Silver II", "Silver I", "Gold III", "Gold II", "Gold I", "Platinum III", "Platinum II", "Platinum I", "Emerald III", "Emerald II", "Emerald I", "Diamond III", "Diamond II", "Diamond I", "Master III", "Master II", "Master I", "Legend"}  local characters = {"Gon", "Nanami", "Mob", "Sukuna"}  spoofer:dropdown { name = "Character", content = characters, callback = function(index) local selectedName = characters[index] if index then Data.Character.Value = tostring(index) end if selectedName and tostring(selectedName) then Data.Character.Value = tostring(selectedName) end end }  spoofer:dropdown { name = "Rank", content = ranks, callback = function(index) local selectedName = ranks[index] if index then Info.RankBest.Value = tostring(index) end if selectedName and tostring(selectedName) then Info.RankBest.Value = tostring(selectedName) end end }  spoofer:Box { name = "Monthly Kills", type = "number", placeholder = "number", callback = function(bool) Info.KillsMonth.Value = bool end }  spoofer:Box { name = "All Time Kills", type = "number", placeholder = "number", callback = function(bool) Info.KillsTotal.Value = bool end }  abilityhecker:Box { name = "Ultimate", type = "string", placeholder = "ultname", callback = function(bool) UltimateText.Text = bool end }  abilityhecker:Box { name = "FirstAbility", type = "string", placeholder = "Ability 1", callback = function(bool) Ability1["Ability1"].Label.Text = bool end }  abilityhecker:Box { name = "SecondAbility", type = "string", placeholder = "Ability 2", callback = function(bool) Ability2["Ability2"].Label.Text = bool end }  abilityhecker:Box { name = "ThirdAbility", type = "string", placeholder = "Ability 3", callback = function(bool) Ability3["Ability3"].Label.Text = bool end }  abilityhecker:Box { name = "FourthAbility", type = "string", placeholder = "Ability 4", callback = function(bool) Ability4["Ability4"].Label.Text = bool end }  toggles:Toggle { Name = "No Stun", flag = "nost", callback = function(bool) Toggles.DisableHitStun.Value = bool Toggles.NoStunOnMiss.Value = bool end }  extra:Toggle { Name = "No Character Timer", flag = "nost", callback = function(bool) Toggles.DisableCombatTimer.Value = bool end }  local toxicval = false local toxicemote = false  toxic:Toggle { Name = "chat", flag = "toxicmsg", callback = function(bool) toxicval = bool end }  toxic:Toggle { Name = "emote", flag = "toxicemote", callback = function(bool) toxicemote = bool end }  dashing:Box { name = "Length", type = "number", placeholder = "number (max 850)", callback = function(bool) if bool then if tonumber(bool) >= 850 then Multipliers.DashSpeed.Value = 850 else Multipliers.DashSpeed.Value = bool end else Multipliers.DashSpeed.Value = 100 end end }  dashing:Toggle { Name = "No Cooldown", flag = "nocd", callback = function(bool) if bool == false then Cooldowns.Dash.Value = 100 Cooldowns.Evasive.Value = 100 else if bool == true then Cooldowns.Dash.Value = 0 Cooldowns.Evasive.Value = 0 end end end }  toggles:Toggle { Name = "No Cooldown", flag = "nocd", callback = function(bool) if bool == false then Cooldowns.Melee.Value = 100 else if bool == true then Cooldowns.Melee.Value = 0 end end end }  toggles:Toggle { Name = "No Slow", flag = "noslow", callback = function(bool) Toggles.NoSlowdowns.Value = bool end }  toggles:Toggle { Name = "Disable Finishers", flag = "nofs", callback = function(bool) Toggles.DisableFinishers.Value = bool end }  local aimbotkey = Enum.KeyCode.K  aimbotframe:Box { name = "Range", type = "number", placeholder = "number", callback = function(bool) if bool then shortestDistance = bool else shortestDistance = 50 end end }  aimbotframe:Keybind { Name = "Aimbot", flag = "aimbot", default = Enum.KeyCode.K, callback = function(bool) aimbotkey = bool end }  aimbotframe:Toggle { Name = "Aimbot", flag = "aimbot", callback = function(bool) aimbot = bool if bool == true then findClosestPlayer() end end }  toggles:Toggle { Name = "No Attack", flag = "noattack", callback = function(bool) Toggles.DisableMelee.Value = bool Toggles.DisableAbilities.Value = bool Toggles.NoStunOnMiss.Value = bool end }  local farmdistance = 2 local Type = nil local following = false local spamtping = false local followConnection local spamtpconnect local farmplr = nil  local function spamtp(targetPlayer)  spamtpconnect = game["Run Service"].RenderStepped:Connect(function() if targetPlayer and targetPlayer.Character  and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then targetPlayer.Character.HumanoidRootPart.Anchored = true targetPlayer.Character.HumanoidRootPart.CFrame = localplr.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, -farmdistance) end end)  end  local function stopspamtp(targetPlayer)  if spamtpconnect and spamtpconnect.Connected then spamtpconnect:Disconnect() end  if targetPlayer and targetPlayer.Character  and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then targetPlayer.Character.HumanoidRootPart.Anchored = false end  end  local function followPlayer(targetPlayer) following = true followConnection = game["Run Service"].RenderStepped:Connect(function() if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then local targetPosition = targetPlayer.Character.HumanoidRootPart.Position local targetLookAt = targetPlayer.Character.HumanoidRootPart.CFrame.LookVector local humanoidRootPart = localplr.Character and localplr.Character:FindFirstChild("HumanoidRootPart")  if humanoidRootPart and Type then local spawnPosition  if Type == "Front" then spawnPosition = targetPosition + targetLookAt * farmdistance elseif Type == "Behind" then spawnPosition = targetPosition + targetLookAt * -farmdistance elseif Type == "Above" then spawnPosition = targetPosition + Vector3.new(0, farmdistance, 0) elseif Type == "Under" then spawnPosition = targetPosition - Vector3.new(0, farmdistance, 0) end  humanoidRootPart.CFrame = CFrame.new(spawnPosition, targetPosition) game.Workspace.CurrentCamera.CameraSubject = targetPlayer.Character.Humanoid    end else following = false if followConnection then followConnection:Disconnect() followConnection = nil end game.Workspace.CurrentCamera.CameraType = Enum.CameraType.Custom game.Workspace.CurrentCamera.CameraSubject = localplr.Character and localplr.Character:FindFirstChild("Humanoid") end end) end  local function stopFollowing() following = false if followConnection then followConnection:Disconnect() followConnection = nil end game.Workspace.CurrentCamera.CameraType = Enum.CameraType.Custom game.Workspace.CurrentCamera.CameraSubject = localplr.Character and localplr.Character:FindFirstChild("Humanoid") end  farm:Box { name = "Distance", type = "number", placeholder = "number (max 15)", callback = function(bool) if bool then if tonumber(bool) >= 15 then farmdistance = 15 else farmdistance = bool end else farmdistance = 2 end end }  local choices = {"Above", "Behind", "Infront", "Under"}  farm:dropdown { name = "Type", content = choices, callback = function(index) local selectedName = choices[index] if index then Type = tostring(index) print(Type) end if selectedName and tostring(selectedName) then Type = tostring(selectedName) print(Type) end end }  local plrtext  plrtext = farm:Box { name = "Player", type = "player", placeholder = "username", callback = function(bool) local inputText = bool:lower() local closestMatch = nil local closestDistance = math.huge  for _, player in pairs(game.Players:GetPlayers()) do local playerName = player.Name:lower()  local distance = string.find(playerName, inputText, 1, true) or math.huge if distance < closestDistance then closestDistance = distance closestMatch = player end  end  if closestMatch then farmplr = closestMatch print(closestMatch) end end }  farm:Toggle { Name = "Spectate", flag = "spectate", callback = function(bool) if bool and farmplr and farmplr:IsA("Player") and not following then game.Workspace.CurrentCamera.CameraSubject = farmplr.Character and farmplr.Character:FindFirstChild("Humanoid") else game.Workspace.CurrentCamera.CameraSubject = localplr.Character and localplr.Character:FindFirstChild("Humanoid") end end }  farm:Toggle { Name = "Bring", flag = "asdka", callback = function(bool) if bool and farmplr and farmplr:IsA("Player") then spamtp(farmplr) else stopspamtp(farmplr) end end }  farm:Toggle { Name = "Autofarm", flag = "farmtoggle", callback = function(bool) if bool and farmplr and farmplr:IsA("Player") and not spamtping then followPlayer(farmplr) else stopFollowing() end end }  funny:Toggle { Name = "Instant Ragdoll", flag = "m1ragdoll", callback = function(bool) if bool == false then Multipliers.MeleeDamage.Value = 100 else if bool == true then Multipliers.MeleeDamage.Value = 99999 end end end }  local flyspeed = 15  flying:Box { name = "Flyspeed", type = "number", placeholder = "number (max 15)", callback = function(bool) if bool then if tonumber(bool) >= 15 then flyspeed = 15 else flyspeed = bool end else flyspeed = 2 end end }  local flykeybind = Enum.KeyCode.X  flying:Keybind { Name = "Keybind", flag = "flykb", default = Enum.KeyCode.X, callback = function(bool) flykeybind = bool end }  flying:Toggle { Name = "Fly", flag = "flyplr", callback = function(bool) if bool == false then localplr:SetAttribute("Flying", nil) localplr.Character:SetAttribute("Fly", nil) else if bool == true then localplr:SetAttribute("Flying", true) localplr.Character:SetAttribute("Fly", true) end end end }  esp:Toggle { Name = "Toggle", flag = "charesp", callback = function(bool) if bool == false then espconfigure = false for _, plr in pairs(game.Players:GetPlayers()) do if plr ~= localplr then  local char = plr.Character  for _, billboard in pairs(char:GetDescendants()) do if billboard:IsA("BillboardGui") and billboard.Name == "ESP" then billboard:Destroy() end end  end end else if bool == true then espconfigure = true for _, plr in pairs(game.Players:GetPlayers()) do if plr ~= localplr then  local char = plr.Character  if char and char:FindFirstChild("HumanoidRootPart") and not char.HumanoidRootPart:FindFirstChild("ESP") then local BillboardGui = Instance.new("BillboardGui") BillboardGui.Name = "ESP" BillboardGui.Adornee = char.HumanoidRootPart BillboardGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling BillboardGui.Active = true BillboardGui.AlwaysOnTop = true BillboardGui.ExtentsOffset = Vector3.new(0, 2, 0) BillboardGui.LightInfluence = 1.000 BillboardGui.Size = UDim2.new(0, 180, 0, 40)  local TextLabel = Instance.new("TextLabel") TextLabel.Parent = BillboardGui TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255) TextLabel.BackgroundTransparency = 1.000 TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0) TextLabel.BorderSizePixel = 0 TextLabel.Size = UDim2.new(1, 0, 1, 0) TextLabel.Font = Enum.Font.SourceSans TextLabel.Text = "@" .. plr.Name TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255) TextLabel.TextSize = 21.000 TextLabel.TextWrapped = true  BillboardGui.Parent = char.HumanoidRootPart end  end end end end end }  highlight:Toggle { Name = "Toggle", flag = "charhighlight", callback = function(bool) if bool == false then highlightconfigure = false for _, plr in pairs(game.Players:GetPlayers()) do if plr ~= localplr then  local char = plr.Character  for _, light in pairs(char:GetChildren()) do if light:IsA("Highlight") and light.Name == "HacksHigh" then light:Destroy() end end  end end else if bool == true then highlightconfigure = true for _, plr in pairs(game.Players:GetPlayers()) do if plr ~= localplr then  local char = plr.Character  if char and not char:FindFirstChild("HacksHigh") then local highlight = Instance.new("Highlight") highlight.FillTransparency = 0.5 highlight.FillColor = Color3.new(1, 1, 1) highlight.Name = "HacksHigh" highlight.OutlineTransparency = 0 highlight.OutlineColor = Color3.new(1, 1, 1) highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop highlight.Adornee = char highlight.Parent = char end  end end end end end }  local flybool = false local aimbotbool = false  ui.InputBegan:Connect(function(Input, IsTyping) if IsTyping then return end  if Input.KeyCode == flykeybind then if flybool then flybool = false localplr:SetAttribute("Flying", nil) localplr.Character:SetAttribute("Fly", nil) else flybool = true localplr:SetAttribute("Flying", true) localplr.Character:SetAttribute("Fly", true) end elseif Input.KeyCode == aimbotkey then if aimbotbool then aimbotbool = false aimbot = false else aimbotbool = true findClosestPlayer() aimbot = true end end end)  local toxicmsg = data.Toxic  local function getRandomToxicMessage() local index = math.random(1, #toxicmsg) return toxicmsg[index] end  localplr.Info.KillsMonth:GetPropertyChangedSignal("Value"):Connect(function() if toxicval then  local args = { [1] = getRandomToxicMessage(), [5] = "5+:e>" }  game:GetService("ReplicatedStorage").Remotes.Services.Chat:FireServer(unpack(args))  end  if toxicemote then  end  end)  game["Run Service"].RenderStepped:Connect(function() for _, plr in pairs(game.Players:GetPlayers()) do if plr ~= localplr then local char = plr.Character if espconfigure then if char and char:FindFirstChild("HumanoidRootPart") and not char.HumanoidRootPart:FindFirstChild("ESP") then local BillboardGui = Instance.new("BillboardGui") BillboardGui.Name = "ESP" BillboardGui.Adornee = char.HumanoidRootPart BillboardGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling BillboardGui.Active = true BillboardGui.AlwaysOnTop = true BillboardGui.ExtentsOffset = Vector3.new(0, 2, 0) BillboardGui.LightInfluence = 1.000 BillboardGui.Size = UDim2.new(0, 200, 0, 50)  local TextLabel = Instance.new("TextLabel") TextLabel.Parent = BillboardGui TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255) TextLabel.BackgroundTransparency = 1.000 TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0) TextLabel.BorderSizePixel = 0 TextLabel.Size = UDim2.new(0, 200, 0, 50) TextLabel.Font = Enum.Font.SourceSans TextLabel.Text = "@" .. plr.Name TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255) TextLabel.TextSize = 21.000 TextLabel.TextWrapped = true  BillboardGui.Parent = char.HumanoidRootPart end end  if highlightconfigure then if char and not char:FindFirstChild("HacksHigh") then local highlight = Instance.new("Highlight") highlight.FillTransparency = 0.5 highlight.FillColor = Color3.new(1, 1, 1) highlight.Name = "HacksHigh" highlight.OutlineTransparency = 0 highlight.OutlineColor = Color3.new(1, 1, 1) highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop highlight.Adornee = char highlight.Parent = char end end end end end)  game:GetService("RunService").RenderStepped:Connect(function() if aimbot and currentplr then aimAt(currentplr) end end) 
